/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Jaztin Mojica
 */
public class SpecsDialog extends javax.swing.JFrame {

    /**
     * Creates new form specsDialog
     */
    public SpecsDialog() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        sugarGroup = new javax.swing.ButtonGroup();
        sizeGroup = new javax.swing.ButtonGroup();
        sizePanel = new javax.swing.JPanel();
        lButton = new javax.swing.JRadioButton();
        xlButton = new javax.swing.JRadioButton();
        sugarPanel = new javax.swing.JPanel();
        fullButton = new javax.swing.JRadioButton();
        halfButton = new javax.swing.JRadioButton();
        noneButton = new javax.swing.JRadioButton();
        numberPanel = new javax.swing.JPanel();
        numberLabel = new javax.swing.JLabel();
        numberSpinner = new javax.swing.JSpinner();
        sinkersPanel = new javax.swing.JPanel();
        bobbaBox = new javax.swing.JCheckBox();
        pearlsBox = new javax.swing.JCheckBox();
        nataBox = new javax.swing.JCheckBox();
        foamBox = new javax.swing.JCheckBox();
        panacottaBox = new javax.swing.JCheckBox();
        bobbaQtyLabel = new javax.swing.JLabel();
        pearlsQtyLabel = new javax.swing.JLabel();
        nataQtyLabel = new javax.swing.JLabel();
        foamQtyLabel = new javax.swing.JLabel();
        panacottaQtyLabel = new javax.swing.JLabel();
        bobbaSpinner = new javax.swing.JSpinner();
        pearlsSpinner = new javax.swing.JSpinner();
        nataSpinner = new javax.swing.JSpinner();
        foamSpinner = new javax.swing.JSpinner();
        panacottaSpinner = new javax.swing.JSpinner();
        placeOrderButton = new javax.swing.JButton();

        sugarGroup.add(fullButton);
        sugarGroup.add(halfButton);
        sugarGroup.add(noneButton);

        sizeGroup.add(lButton);
        sizeGroup.add(xlButton);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        java.awt.GridBagLayout layout = new java.awt.GridBagLayout();
        layout.columnWeights = new double[] {1.0};
        getContentPane().setLayout(layout);

        sizePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Size", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 0, 12))); // NOI18N
        sizePanel.setLayout(new java.awt.GridBagLayout());

        sizeGroup.add(lButton);
        lButton.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        lButton.setText("Large (L)");
        lButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        sizePanel.add(lButton, gridBagConstraints);

        sizeGroup.add(xlButton);
        xlButton.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        xlButton.setSelected(true);
        xlButton.setText("Extra Large (XL)");
        xlButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xlButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        sizePanel.add(xlButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(sizePanel, gridBagConstraints);

        sugarPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Sugar Level", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 0, 12))); // NOI18N
        sugarPanel.setLayout(new java.awt.GridBagLayout());

        sugarGroup.add(fullButton);
        fullButton.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        fullButton.setSelected(true);
        fullButton.setText("Full (100%)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        sugarPanel.add(fullButton, gridBagConstraints);

        sugarGroup.add(halfButton);
        halfButton.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        halfButton.setText("Half (50%)");
        halfButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                halfButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        sugarPanel.add(halfButton, gridBagConstraints);

        sugarGroup.add(noneButton);
        noneButton.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        noneButton.setText("None (0%)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        sugarPanel.add(noneButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(sugarPanel, gridBagConstraints);

        numberPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Number of Drinks", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 0, 12))); // NOI18N
        numberPanel.setLayout(new java.awt.GridBagLayout());

        numberLabel.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        numberLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        numberLabel.setText("Quantity:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        numberPanel.add(numberLabel, gridBagConstraints);

        numberSpinner.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        numberSpinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        numberPanel.add(numberSpinner, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(numberPanel, gridBagConstraints);

        sinkersPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Sinkers", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 0, 12))); // NOI18N
        sinkersPanel.setLayout(new java.awt.GridBagLayout());

        bobbaBox.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        bobbaBox.setText("Popping Bobba");
        bobbaBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bobbaBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        sinkersPanel.add(bobbaBox, gridBagConstraints);

        pearlsBox.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        pearlsBox.setText("Black Pearls");
        pearlsBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pearlsBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        sinkersPanel.add(pearlsBox, gridBagConstraints);

        nataBox.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        nataBox.setText("Nata Crystals");
        nataBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nataBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        sinkersPanel.add(nataBox, gridBagConstraints);

        foamBox.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        foamBox.setText("Foam");
        foamBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                foamBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        sinkersPanel.add(foamBox, gridBagConstraints);

        panacottaBox.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        panacottaBox.setText("Panacotta");
        panacottaBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                panacottaBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        sinkersPanel.add(panacottaBox, gridBagConstraints);

        bobbaQtyLabel.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        bobbaQtyLabel.setText("Quantity:");
        bobbaQtyLabel.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 8);
        sinkersPanel.add(bobbaQtyLabel, gridBagConstraints);

        pearlsQtyLabel.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        pearlsQtyLabel.setText("Quantity:");
        pearlsQtyLabel.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 8);
        sinkersPanel.add(pearlsQtyLabel, gridBagConstraints);

        nataQtyLabel.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        nataQtyLabel.setText("Quantity:");
        nataQtyLabel.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 8);
        sinkersPanel.add(nataQtyLabel, gridBagConstraints);

        foamQtyLabel.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        foamQtyLabel.setText("Quantity:");
        foamQtyLabel.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 8);
        sinkersPanel.add(foamQtyLabel, gridBagConstraints);

        panacottaQtyLabel.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        panacottaQtyLabel.setText("Quantity:");
        panacottaQtyLabel.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 8);
        sinkersPanel.add(panacottaQtyLabel, gridBagConstraints);

        bobbaSpinner.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        bobbaSpinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));
        bobbaSpinner.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        sinkersPanel.add(bobbaSpinner, gridBagConstraints);

        pearlsSpinner.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        pearlsSpinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));
        pearlsSpinner.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        sinkersPanel.add(pearlsSpinner, gridBagConstraints);

        nataSpinner.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        nataSpinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));
        nataSpinner.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        sinkersPanel.add(nataSpinner, gridBagConstraints);

        foamSpinner.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        foamSpinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));
        foamSpinner.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        sinkersPanel.add(foamSpinner, gridBagConstraints);

        panacottaSpinner.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        panacottaSpinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));
        panacottaSpinner.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        sinkersPanel.add(panacottaSpinner, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(sinkersPanel, gridBagConstraints);

        placeOrderButton.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        placeOrderButton.setText("Add Order");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(placeOrderButton, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void halfButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_halfButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_halfButtonActionPerformed

    private void nataBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nataBoxActionPerformed
        // enable/disable adjustment of quantity for nata
        if(nataBox.isSelected())
        {
            nataQtyLabel.setEnabled(true);
            nataSpinner.setEnabled(true);
        }
        else
        {
            nataQtyLabel.setEnabled(false);
            nataSpinner.setEnabled(false);
        }
    }//GEN-LAST:event_nataBoxActionPerformed

    private void lButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lButtonActionPerformed

    private void xlButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xlButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_xlButtonActionPerformed

    private void bobbaBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bobbaBoxActionPerformed
        // enable/disable adjustment of quantity for popping bobba
        if(bobbaBox.isSelected())
        {
            bobbaQtyLabel.setEnabled(true);
            bobbaSpinner.setEnabled(true);
        }
        else
        {
            bobbaQtyLabel.setEnabled(false);
            bobbaSpinner.setEnabled(false);
        }
    }//GEN-LAST:event_bobbaBoxActionPerformed

    private void pearlsBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pearlsBoxActionPerformed
        // enable/disable adjustment of quantity for pearls
        if(pearlsBox.isSelected())
        {
            pearlsQtyLabel.setEnabled(true);
            pearlsSpinner.setEnabled(true);
        }
        else
        {
            pearlsQtyLabel.setEnabled(false);
            pearlsSpinner.setEnabled(false);
        }
    }//GEN-LAST:event_pearlsBoxActionPerformed

    private void foamBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_foamBoxActionPerformed
        // enable/disable adjustment of quantity for foam
        if(foamBox.isSelected())
        {
            foamQtyLabel.setEnabled(true);
            foamSpinner.setEnabled(true);
        }
        else
        {
            foamQtyLabel.setEnabled(false);
            foamSpinner.setEnabled(false);
        }
    }//GEN-LAST:event_foamBoxActionPerformed

    private void panacottaBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_panacottaBoxActionPerformed
        // enable/disable adjustment of quantity for panacotta
        if(panacottaBox.isSelected())
        {
            panacottaQtyLabel.setEnabled(true);
            panacottaSpinner.setEnabled(true);
        }
        else
        {
            panacottaQtyLabel.setEnabled(false);
            panacottaSpinner.setEnabled(false);
        }
    }//GEN-LAST:event_panacottaBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Windows look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SpecsDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SpecsDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SpecsDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SpecsDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SpecsDialog().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox bobbaBox;
    private javax.swing.JLabel bobbaQtyLabel;
    private javax.swing.JSpinner bobbaSpinner;
    private javax.swing.JCheckBox foamBox;
    private javax.swing.JLabel foamQtyLabel;
    private javax.swing.JSpinner foamSpinner;
    private javax.swing.JRadioButton fullButton;
    private javax.swing.JRadioButton halfButton;
    private javax.swing.JRadioButton lButton;
    private javax.swing.JCheckBox nataBox;
    private javax.swing.JLabel nataQtyLabel;
    private javax.swing.JSpinner nataSpinner;
    private javax.swing.JRadioButton noneButton;
    private javax.swing.JLabel numberLabel;
    private javax.swing.JPanel numberPanel;
    private javax.swing.JSpinner numberSpinner;
    private javax.swing.JCheckBox panacottaBox;
    private javax.swing.JLabel panacottaQtyLabel;
    private javax.swing.JSpinner panacottaSpinner;
    private javax.swing.JCheckBox pearlsBox;
    private javax.swing.JLabel pearlsQtyLabel;
    private javax.swing.JSpinner pearlsSpinner;
    private javax.swing.JButton placeOrderButton;
    private javax.swing.JPanel sinkersPanel;
    private javax.swing.ButtonGroup sizeGroup;
    private javax.swing.JPanel sizePanel;
    private javax.swing.ButtonGroup sugarGroup;
    private javax.swing.JPanel sugarPanel;
    private javax.swing.JRadioButton xlButton;
    // End of variables declaration//GEN-END:variables
}
